name: CI - Docker Test

on:
  pull_request:
    types: [opened, synchronize, reopened]

env:
  PORT_SSE: 8080
  PORT_METRICS: 9090
  PROFILES: memory
  GO_VERSION: "1.24"

jobs:
  docker-test:
    name: Build image and run integration tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Show Docker versions
        run: |
          docker --version
          docker compose version

      # Build Docker image
      - name: Build Docker image
        run: make docker-build

      # Run integration tests with healthcheck wait
      - name: Run integration tests
        run: |
          # Start containers in detached mode
          docker compose up -d
          
          # Wait for the container to become healthy (max 60s)
          for i in {1..12}; do
            STATUS=$(docker inspect --format='{{.State.Health.Status}}' mcp-memory-libsql-go-memory-1 || echo "unknown")
            echo "Container health: $STATUS"
            if [ "$STATUS" = "healthy" ]; then
              break
            fi
            sleep 5
          done
          
          # If still not healthy after waiting, fail with logs
          if [ "$STATUS" != "healthy" ]; then
            docker compose logs
            exit 1
          fi

          # Run your tests
          make docker-test
        env:
          PORT_SSE: ${{ env.PORT_SSE }}
          PORT_METRICS: ${{ env.PORT_METRICS }}
          PROFILES: ${{ env.PROFILES }}
