name: CI - Docker Test

on:
  pull_request:
    types: [opened, synchronize, reopened]

env:
  PORT_SSE: 8080
  PORT_METRICS: 9090
  PROFILES: memory
  GO_VERSION: "1.24"
  DOCKER_COMPOSE_VERSION: "v2.39.2"

jobs:
  docker-test:
    name: Build image and run integration tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      # Install Go with caching
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      # Set up Docker Buildx (includes Compose v2 on ubuntu-latest)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Optional: install a specific Compose version
      - name: Install Docker Compose v2
        run: |
          mkdir -p ~/.docker/cli-plugins/
          curl -SL https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-linux-x86_64 \
            -o ~/.docker/cli-plugins/docker-compose
          chmod +x ~/.docker/cli-plugins/docker-compose
          docker compose version

      # Cache Docker build layers
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # Show versions
      - name: Show Docker versions
        run: |
          docker --version
          docker compose version

      # Build Docker image
      - name: Build Docker image
        run: make docker-build

      # Run integration tests
      - name: Run integration tests
        run: make docker-test
        env:
          PORT_SSE: ${{ env.PORT_SSE }}
          PORT_METRICS: ${{ env.PORT_METRICS }}
          PROFILES: ${{ env.PROFILES }}
